
                                    Leetcode 189 :- Rotate Array 
                                 ------------------------------------

    // Method 1 - Brute Approach
    
    void reversePart(int i, int j, vector<int>& nums) {
            while (i <= j) {
                swap(nums[i], nums[j]);
                i++;
                j--;
            }
    }
    void rotate(vector<int>& nums, int k) {
        int n = nums.size();
        k = k % n;  // Fix: handle cases where k > n

        if (n == 1 || k == 0) return;

        reversePart(0, n - k - 1, nums);
        reversePart(n - k, n - 1, nums);
        reversePart(0, n - 1, nums);
    }



    // Optimizied Approach

    void rotate(vector<int>& nums, int k) {
        int n = nums.size();
        k = k % n; // Handle cases where k > n

        reverse(nums.begin(), nums.end());

        // Step 2: Reverse the first k elements
        reverse(nums.begin(), nums.begin() + k);

        // Step 3: Reverse the remaining n-k elements
        reverse(nums.begin() + k, nums.end());
    }

