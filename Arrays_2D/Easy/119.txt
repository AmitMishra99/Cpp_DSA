// Method - 1 : Brute Approach 

// class Solution {
// public:
//     vector<int> getRow(int rowIndex) {
//        vector<vector<int>>ans;
//         for(int i=0;i<=rowIndex;i++){
//             vector<int>v(i+1,1);
//             for(int j=1;j<i;j++){
//               v[j] = ans[i-1][j-1] + ans[i-1][j]; 
//             }
//             ans.push_back(v);
//         }
//         return ans[rowIndex]; 
//     }
// };

// Method - 2 : Optimized Approach 

// class Solution {
// public:
//     vector<int> getRow(int rowIndex) {
//         vector<int> row(rowIndex + 1, 1);
//         for (int i = 2; i <= rowIndex; i++) {
//             for (int j = i - 1; j > 0; j--) {
//                 row[j] += row[j - 1];
//             }
//         }
//         return row;
//     }
// };

